{
  "metadata": {
    "version": 1,
    "disable_limits": false,
    "instance_type": "ml.m5.4xlarge"
  },
  "parameters": [],
  "nodes": [
    {
      "node_id": "a4c12952-0119-4929-bb5c-48f5f6222b75",
      "type": "SOURCE",
      "operator": "sagemaker.s3_source_0.1",
      "parameters": {
        "dataset_definition": {
          "__typename": "S3CreateDatasetDefinitionOutput",
          "datasetSourceType": "S3",
          "name": "trip_data",
          "description": null,
          "s3ExecutionContext": {
            "__typename": "S3ExecutionContext",
            "s3Uri": "s3://104877823522-us-east-1-dw-ts-lab/trip data/",
            "s3ContentType": "parquet",
            "s3HasHeader": true,
            "s3FieldDelimiter": ",",
            "s3DirIncludesNested": false,
            "s3AddsFilenameColumn": false,
            "s3RoleArn": null
          }
        }
      },
      "inputs": [],
      "outputs": [
        {
          "name": "default",
          "sampling": {
            "sampling_method": "sample_by_limit",
            "limit_rows": 50000
          }
        }
      ]
    },
    {
      "node_id": "e7e7c875-0b8e-4b79-9571-4d70ee1eb410",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.infer_and_cast_type_0.1",
      "parameters": {},
      "trained_parameters": {
        "schema": {
          "store_and_fwd_flag": "string",
          "VendorID": "long",
          "tpep_pickup_datetime": "datetime",
          "tpep_dropoff_datetime": "datetime",
          "passenger_count": "long",
          "trip_distance": "float",
          "RatecodeID": "long",
          "PULocationID": "long",
          "DOLocationID": "long",
          "payment_type": "long",
          "fare_amount": "float",
          "extra": "float",
          "mta_tax": "float",
          "tip_amount": "float",
          "tolls_amount": "float",
          "improvement_surcharge": "float",
          "total_amount": "float",
          "congestion_surcharge": "float",
          "airport_fee": "long"
        }
      },
      "inputs": [
        {
          "name": "default",
          "node_id": "a4c12952-0119-4929-bb5c-48f5f6222b75",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "a6f73814-b3eb-49a4-89d7-935b5899b893",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_columns_0.1",
      "parameters": {
        "operator": "Drop column",
        "drop_column_parameters": {
          "column_to_drop": [
            "VendorID",
            "RatecodeID",
            "store_and_fwd_flag",
            "DOLocationID",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tolls_amount",
            "improvement_surcharge",
            "passenger_count",
            "congestion_surcharge",
            "airport_fee"
          ]
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "e7e7c875-0b8e-4b79-9571-4d70ee1eb410",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "7efc3bf9-3444-4bb2-8868-0fcd22655027",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Validate timestamps_parameters": {
          "timestamp_column": "tpep_pickup_datetime",
          "policy": "drop"
        },
        "operator": "Validate timestamps"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "a6f73814-b3eb-49a4-89d7-935b5899b893",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "23d85b34-714c-4866-8967-76f49a8ec36c",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Validate timestamps_parameters": {
          "timestamp_column": "tpep_dropoff_datetime",
          "policy": "drop"
        },
        "operator": "Validate timestamps"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "7efc3bf9-3444-4bb2-8868-0fcd22655027",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "1ab3a362-6206-48e6-bd5e-defbb274b4bb",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (PySpark)",
        "pyspark_parameters": {
          "code": "# Table is available as variable `df`\nfrom pyspark.sql.functions import col, round\ndf = df.withColumn('duration', round((col(\"tpep_dropoff_datetime\").cast(\"long\")-col(\"tpep_pickup_datetime\").cast(\"long\"))/60,2))\ndf = df.drop(\"tpep_dropoff_datetime\")"
        },
        "name": "Duration_Transformation"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "23d85b34-714c-4866-8967-76f49a8ec36c",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "afa2dc72-038e-43e5-83cb-bbb3ee92c1df",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.handle_missing_0.1",
      "parameters": {
        "operator": "Fill missing",
        "fill_missing_parameters": {
          "input_column": [
            "PULocationID",
            "tip_amount",
            "total_amount"
          ],
          "fill_value": "0"
        },
        "impute_parameters": {
          "column_type": "Numeric",
          "numeric_parameters": {
            "strategy": "Approximate Median"
          }
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "1ab3a362-6206-48e6-bd5e-defbb274b4bb",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "77553f8d-587d-469f-acb9-ecae06134f23",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Handle missing_parameters": {
          "hm_input_type_Along column_parameters": {
            "hmac_output_column": "",
            "hmac_id_column": "PULocationID",
            "hmac_strategy": "Constant Value",
            "hmac_leftovernans": "Fill with Forward/Backward feed",
            "hmac_strategy_Constant Value_parameters": {
              "hmac_custom_value": "0.0"
            },
            "hmac_sequence_column": "trip_distance",
            "hmac_timestamp_column": "tpep_pickup_datetime"
          },
          "hm_input_type": "Along column"
        },
        "operator": "Handle missing"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "afa2dc72-038e-43e5-83cb-bbb3ee92c1df",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "35cd1b7e-760d-45f3-a539-f5e270666c3d",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (PySpark)",
        "pyspark_parameters": {
          "code": "# Table is available as variable `df`\ndf = df.filter(df.trip_distance >= 0)\ndf = df.filter(df.tip_amount >= 0)\ndf = df.filter(df.total_amount >= 0)\ndf = df.filter(df.duration >= 1)\ndf = df.filter((1 <= df.PULocationID) & (df.PULocationID <= 263))\ndf = df.filter((df.tpep_pickup_datetime >= \"2019-01-01 00:00:00\") & (df.tpep_pickup_datetime < \"2020-03-01 00:00:00\"))"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "77553f8d-587d-469f-acb9-ecae06134f23",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "88b3eaa5-ab2c-4c41-80af-13f15bea6875",
      "type": "VISUALIZATION",
      "operator": "sagemaker.visualizations.describe_0.1",
      "parameters": {
        "name": "Cleaned dataset summary"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "35cd1b7e-760d-45f3-a539-f5e270666c3d",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "f7792c72-c66d-429a-bcaf-7e5902fb077a",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.handle_outliers_0.1",
      "parameters": {
        "operator": "Standard deviation numeric outliers",
        "standard_deviation_numeric_outliers_parameters": {
          "input_column": [
            "tip_amount",
            "total_amount",
            "duration",
            "trip_distance"
          ],
          "standard_deviations": 4,
          "fix_method": "Remove"
        }
      },
      "trained_parameters": {
        "standard_deviation_numeric_outliers_parameters": [
          {
            "_hash": "10b2dff28011403357a5a7dd4a37e9bea91721a8",
            "lower_threshold": -9.481208923309532,
            "upper_threshold": 13.126177171659487,
            "input_column": "tip_amount"
          },
          {
            "_hash": "10b2dff28011403357a5a7dd4a37e9bea91721a8",
            "lower_threshold": -35.49682563379623,
            "upper_threshold": 65.32414889258317,
            "input_column": "total_amount"
          },
          {
            "_hash": "10b2dff28011403357a5a7dd4a37e9bea91721a8",
            "lower_threshold": -256.2956417311678,
            "upper_threshold": 286.03531278099973,
            "input_column": "duration"
          },
          {
            "_hash": "10b2dff28011403357a5a7dd4a37e9bea91721a8",
            "lower_threshold": -9.594397162293722,
            "upper_threshold": 14.958334455671134,
            "input_column": "trip_distance"
          }
        ]
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "35cd1b7e-760d-45f3-a539-f5e270666c3d",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "f55861b2-a201-44b1-b38d-968eb55ae4dc",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (PySpark)",
        "pyspark_parameters": {
          "code": "# Table is available as variable `df`\nfrom pyspark.sql.functions import col, date_trunc\ndf = df.withColumn('pickup_time', date_trunc(\"hour\",col(\"tpep_pickup_datetime\")))\ndf = df.drop(\"tpep_pickup_datetime\")"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "f7792c72-c66d-429a-bcaf-7e5902fb077a",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "51af234a-0ad0-4169-abb2-d83c7d92fe09",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (PySpark)",
        "pyspark_parameters": {
          "code": "# Table is available as variable `df`\nfrom pyspark.sql import functions as f\nfrom pyspark.sql import Window\ndf = df.withColumn('count', f.count('duration').over(Window.partitionBy([f.col(\"pickup_time\"), f.col(\"PULocationID\")])))"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "f55861b2-a201-44b1-b38d-968eb55ae4dc",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "9a106663-e0b1-4e81-86c3-a79704a19f1c",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Resample_parameters": {
          "frequency": {
            "quantity": 1,
            "offset_description": "Hourly"
          },
          "downsample": {
            "non_numeric": "most common",
            "numeric": "mean"
          },
          "upsample": {
            "non_numeric": "ffill",
            "numeric": "linear"
          },
          "timestamp_column": "pickup_time",
          "id_column": "PULocationID"
        },
        "operator": "Resample"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "51af234a-0ad0-4169-abb2-d83c7d92fe09",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "175deaa2-b9a5-41df-a7e9-8d6291be7c33",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Resample_parameters": {
          "frequency": {
            "quantity": 1,
            "offset_description": "Hourly"
          },
          "downsample": {
            "non_numeric": "most common",
            "numeric": "mean"
          },
          "upsample": {
            "non_numeric": "ffill",
            "numeric": "linear"
          },
          "timestamp_column": "pickup_time",
          "id_column": "PULocationID"
        },
        "operator": "Resample"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "9a106663-e0b1-4e81-86c3-a79704a19f1c",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "053b37a9-f0ed-4148-ad2f-c5925af368f1",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Featurize datetime_parameters": {
          "output_column": "date",
          "output_mode": "Ordinal",
          "output_format": "Columns",
          "infer_datetime_format": false,
          "date_time_format": "",
          "year": true,
          "month": true,
          "day": true,
          "hour": true,
          "minute": false,
          "second": false,
          "week_of_year": true,
          "day_of_year": true,
          "quarter": true,
          "input_column": "pickup_time"
        },
        "operator": "Featurize datetime"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "175deaa2-b9a5-41df-a7e9-8d6291be7c33",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "7c43f605-ffab-4e99-a854-8e13b2321121",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Lag features_parameters": {
          "lag": 8,
          "entire_window": true,
          "drop_rows": false,
          "entire_window_True_parameters": {
            "flatten": true
          },
          "sequence_column": "count",
          "id_column": "PULocationID",
          "timestamp_column": "pickup_time"
        },
        "operator": "Lag features"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "053b37a9-f0ed-4148-ad2f-c5925af368f1",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "75dc6389-d898-4fca-b1a6-e5f596cd7433",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.time_series_0.1",
      "parameters": {
        "Rolling window features_parameters": {
          "window_size": 8,
          "flatten": true,
          "strategy": "Minimal subset",
          "sequence_column": "count",
          "id_column": "PULocationID"
        },
        "operator": "Rolling window features"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "7c43f605-ffab-4e99-a854-8e13b2321121",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "f169cc67-a04e-4e7a-93f6-76a07f7954d1",
      "type": "DESTINATION",
      "operator": "sagemaker.spark.s3_destination_0.1",
      "name": "S3: NYC_export",
      "parameters": {
        "output_config": {
          "compression": "none",
          "output_path": "s3://104877823522-us-east-1-dw-ts-lab/",
          "output_content_type": "CSV",
          "delimiter": ","
        }
      },
      "inputs": [
        {
          "name": "default",
          "node_id": "75dc6389-d898-4fca-b1a6-e5f596cd7433",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    }
  ]
}